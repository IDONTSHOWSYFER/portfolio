"use strict";

document.addEventListener("DOMContentLoaded", () => {
    console.log("JavaScript chargé avec succès.");

    /* ============================
         Fonctionnalité : Menu Burger
      ============================ */
    (() => {
        const burger = document.querySelector(".burger");
        const nav = document.querySelector(".nav-links");
        const navLinks = document.querySelectorAll(".nav-links li");

        if (!burger || !nav) {
            console.error("Éléments du menu burger non trouvés. Vérifiez les classes CSS.");
            return;
        }

        const toggleNav = () => {
            console.log("Burger menu cliqué.");
            nav.classList.toggle("nav-active");
            burger.classList.toggle("toggle");

            const isExpanded = burger.classList.contains("toggle");
            burger.setAttribute("aria-expanded", isExpanded);

            navLinks.forEach((link, index) => {
                link.style.animation = nav.classList.contains("nav-active") ? `navLinkFade 0.5s ease forwards ${index / 7 + 0.3}s` : "";
            });
        };

        burger.addEventListener("click", toggleNav);
        navLinks.forEach((link) => {
            link.addEventListener("click", () => {
                if (nav.classList.contains("nav-active")) {
                    console.log("Lien de navigation cliqué. Fermeture du menu.");
                    toggleNav();
                }
            });
        });
    })();

    /* ============================
         Fonctionnalité : Mode Jour / Mode Sombre
      ============================ */
    (() => {
        const themeToggleButton = document.getElementById('theme-toggle-button');
        const currentTheme = localStorage.getItem('theme');
        const switchableImages = document.querySelectorAll('.theme-switchable');
        const favicon = document.getElementById('favicon');

        // Fonction pour mettre à jour les images en fonction du thème
        const updateImages = (theme) => {
            switchableImages.forEach(img => {
                const lightSrc = img.getAttribute('data-light-src');
                const darkSrc = img.getAttribute('data-dark-src');
                img.src = theme === 'light' && lightSrc ? lightSrc : darkSrc;
            });
        };

        // Appliquer le thème sauvegardé au chargement de la page
        if (currentTheme === 'light') {
            document.body.classList.add('light-theme');
            // Changer l'icône en lune
            themeToggleButton.innerHTML = '<i class="fa-solid fa-moon"></i>';
            updateImages('light');
            // Changer le favicon
            if (favicon) {
                favicon.href = "/public/assets/img/light-theme/favicon-light.png";
            }
        } else {
            // Changer le favicon en mode sombre
            if (favicon) {
                favicon.href = "/public/assets/img/dark-theme/favicon-dark.png";
            }
            updateImages('dark');
        }

        // Écouter les clics sur le bouton de basculement
        themeToggleButton.addEventListener('click', () => {
            document.body.classList.toggle('light-theme');
            const newTheme = document.body.classList.contains('light-theme') ? 'light' : 'dark';
            localStorage.setItem('theme', newTheme);
            themeToggleButton.innerHTML = newTheme === 'light' ? '<i class="fa-solid fa-moon"></i>' : '<i class="fa-solid fa-sun"></i>';
            updateImages(newTheme);
            // Changer le favicon en fonction du thème
            if (favicon) {
                favicon.href = newTheme === 'light' ? "/public/assets/img/light-theme/favicon-light.png" : "/public/assets/img/dark-theme/favicon-dark.png";
            }
        });
    })();

    /* ============================
         Fonctionnalité : Gestion des Modales
      ============================ */
    (() => {
        const openModalButtons = document.querySelectorAll('.open-modal');
        const closeModalButtons = document.querySelectorAll('.modal .close-modal');

        openModalButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                e.preventDefault();
                const targetModalId = button.getAttribute('data-modal');
                console.log(`Tentative d'ouverture de la modal: ${targetModalId}`);
                const modal = document.getElementById(targetModalId);

                if (!modal) {
                    console.error(`Modale avec l'ID "${targetModalId}" non trouvée.`);
                    return;
                }

                // Récupérer les données du bouton
                const title = button.getAttribute('data-title');
                const imgLightSrc = button.getAttribute('data-img-light');
                const imgDarkSrc = button.getAttribute('data-img-dark');
                const description = button.getAttribute('data-description');
                const link = button.getAttribute('data-link');

                // Sélectionner les éléments de la modale
                const modalTitle = modal.querySelector('#modal-title');
                const modalImg = modal.querySelector('#modal-img');
                const modalDescription = modal.querySelector('#modal-description');
                const modalLink = modal.querySelector('#modal-link');

                if (modalTitle) modalTitle.textContent = title || 'Titre du Projet';

                const currentTheme = localStorage.getItem('theme') || 'dark';
                if (modalImg) {
                    modalImg.src = currentTheme === 'light' && imgLightSrc ? imgLightSrc : imgDarkSrc;
                    modalImg.alt = `Image du projet ${title || 'Projet'} (${currentTheme === 'light' ? 'Mode Jour' : 'Mode Sombre'})`;
                }

                if (modalDescription) modalDescription.textContent = description || 'Description du projet...';
                if (modalLink) {
                    modalLink.href = link || '#';
                    modalLink.style.display = link ? 'inline-block' : 'none';
                }

                // Afficher la modale
                modal.classList.add('active');
                modal.setAttribute('aria-hidden', 'false');
                document.body.style.overflow = 'hidden';
            });
        });

        closeModalButtons.forEach(button => {
            button.addEventListener('click', () => {
                const modal = button.closest('.modal');
                if (modal) {
                    console.log(`Fermeture de la modale: ${modal.id}`);
                    closeModal(modal);
                }
            });
        });

        window.addEventListener('click', (e) => {
            if (e.target.classList.contains('modal')) {
                console.log(`Fermeture de la modale en cliquant en dehors: ${e.target.id}`);
                closeModal(e.target);
            }
        });

        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                console.log(`Fermeture de toutes les modales avec Échap.`);
                document.querySelectorAll('.modal.active').forEach(modal => closeModal(modal));
            }
        });

        function closeModal(modal) {
            modal.classList.remove('active');
            modal.setAttribute('aria-hidden', 'true');
            document.body.style.overflow = '';
        }
    })();

    /* ============================
         Fonctionnalité : Bouton "Retour en haut"
      ============================ */
    (() => {
        const scrollTopButton = document.getElementById("scroll-top");

        if (!scrollTopButton) {
            console.error('Bouton "Retour en haut" non trouvé. Vérifiez l\'ID du bouton.');
            return;
        }

        const toggleScrollTopButton = () => {
            const isVisible = window.scrollY > 300;
            console.log(`Affichage du bouton "Retour en haut": ${isVisible}`);
            scrollTopButton.classList.toggle("visible", isVisible);
        };

        window.addEventListener("scroll", toggleScrollTopButton);
        toggleScrollTopButton();

        scrollTopButton.addEventListener("click", () => {
            console.log(`Bouton "Retour en haut" cliqué.`);
            window.scrollTo({
                top: 0,
                behavior: "smooth",
            });
        });
    })();

    /* ============================
         Mail Js
      ============================ */
    (function () {
        emailjs.init("oxjRO8a9Xk0pSU4AG"); // Remplacez par votre ID utilisateur EmailJS réel
    })();

    // Form Submit Handler
    document
        .getElementById("contactForm")
        .addEventListener("submit", function (event) {
            event.preventDefault(); // Empêcher la soumission par défaut

            // Récupérer les valeurs du formulaire
            const userName = document.getElementById("name").value;
            const userEmail = document.getElementById("email").value;
            const userMessage = document.getElementById("message").value;

            // Log des valeurs du formulaire
            console.log("Form submitted with values:", {
                userName,
                userEmail,
                userMessage,
            });

            // Paramètres pour recevoir l'email (à vous)
            const receiveParams = {
                name: userName,
                email: userEmail,
                message: userMessage,
            };

            // Afficher la section de chargement en ajoutant une classe 'active'
            const loadingDiv = document.querySelector(".loading");
            if (loadingDiv) {
                loadingDiv.classList.add("active");
            }

            // Envoyer le message du client à votre email
            emailjs
                .send("service_nttg82g", "template_and0lor", receiveParams)
                .then(function (response) {
                    console.log(
                        "Client message sent successfully:",
                        response.status,
                        response.text
                    );

                    // Envoyer la réponse automatique au client
                    return emailjs.send("service_nttg82g", "template_q4an1f8", {
                        name: userName,
                        message: userMessage,
                        email: userEmail,
                    });
                })
                .then(function (response) {
                    console.log(
                        "Auto response sent successfully:",
                        response.status,
                        response.text
                    );

                    // Redirection vers la page de confirmation après une courte pause pour voir l'animation
                    setTimeout(() => {
                        window.location.href = "confirmation.html"; // Redirection vers confirmation.html
                    }, 1500); // 1.5 secondes
                })
                .catch(function (error) {
                    console.error("Failed to send message:", error);
                    alert("Failed to send your message. Please try again later.");

                    // Masquer la section de chargement en cas d'erreur
                    if (loadingDiv) {
                        loadingDiv.classList.remove("active");
                    }
                });
        });
});